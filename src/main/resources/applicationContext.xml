<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Spring的配置文件 -->
	<!-- 扫描除控制器之外的 -->
	<context:component-scan base-package="com.crud">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 配置数据源 -->
	<context:property-placeholder
		location="classpath:dbconfig.properties" />
	<bean id="pooledDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池属性 -->
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 配置和Mybatis的整合 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="pooledDataSource"></property>
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations"
			value="classpath:mapper/*.xml"></property>
	</bean>
	<!-- 配置扫描器，将Mybatis的接口实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.crud.dao"></property>
	</bean>
	<!-- 配置一个可以执行批量的sqlSession -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory"></constructor-arg>
	<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>
	<!-- 事务控制的配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>

	<!-- 开启基于注解的事务 -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut
			expression="execution(* com.crud.service..*(..))" id="txPoint" />
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>
	<!-- 配置事务增强，事务如何切入 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*" />
			<!-- 以get开头的多种方法 -->
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 关于com.crud.utils包中的测试 -->
	<!-- 方法一 -->
	<!-- <bean id="infoPhone" class="com.crud.utils.PhoneNumber"> -->
	<!-- <constructor-arg value="888"></constructor-arg> -->
	<!-- <constructor-arg value="555"></constructor-arg> -->
	<!-- <constructor-arg value="1212"></constructor-arg> -->
	<!-- </bean> -->
	<!-- <bean id="contact" class="com.crud.utils.Contact"> -->
	<!-- <property name="phoneNumber" ref="infoPhone"></property> -->
	<!-- </bean> -->

	<!-- 方法二，自定义属性编辑器 -->
	<!-- <bean -->
	<!-- class="org.springframework.beans.factory.config.CustomEditorConfigurer"> -->
	<!-- <property name="customEditors"> -->
	<!-- <map> -->
	<!-- <entry key="com.crud.utils.PhoneNumber" value="com.crud.utils.PhoneEditor"> -->
	<!-- </entry> -->
	<!-- </map> -->
	<!-- </property> -->
	<!-- </bean> -->
	<!-- <bean id="contact" class="com.crud.utils.Contact" > -->
	<!-- <property name="phoneNumber" value="888-555-1212"></property> -->
	<!-- </bean> -->
</beans>
